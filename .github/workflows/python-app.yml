# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    tags:
      - 'v*.*.*'  # 仅在推送标签符合此模式时触发
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Name of the release'
        required: true
        default: 'Release'
      tag_name:
        description: 'Tag name for the release'
        required: true
        default: 'v1.0.0'


jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build on Windows
        run: echo "Building on Windows"
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt  # 安装项目依赖
      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile rssPush.py

  release:
    needs: [build-ubuntu, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: 'v1.0.0'  # 使用提取后的标签名
        release_name: 'v1.0.0'
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Windows artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: D:\a\alist-rssPush\alist-rssPush\dist\rssPush.exe
        asset_name: rssPush-windows.exe
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
